name: CI

on:
  push:
    branches:
      - 'main'
    paths:
      - 'backend/**'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'backend/**'

jobs:
  coding-standard:
    name: Coding Standard (PSR-12) Backend
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Git Files Changed
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main
          echo changedFiles=$(git diff --diff-filter=ACMRT --name-only origin/main HEAD | grep ^backend/ | xargs) >> $GITHUB_OUTPUT
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          ini-values: memory_limit=-1
          extensions: imagick, bcmath, mysqli, intl, pdo_mysql, pdo_pgsql, pgsql, opcache, gd, xsl, zip, soap, pcntl, sockets
        env:
          APP_ENV: dev
      - name: Composer install
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader"
          working-directory: "backend"
      - name: PHP Mess Detector
        run: | 
          for file in ${{ steps.changes.outputs.changedFiles }} 
          do 
            php bin/phpmd ${file} text phpmd.xml 
          done
        working-directory: "backend"
      - name: PHP Code Sniffer Fixer
        run: |
          if [[ ! -z "${{ steps.changes.outputs.changedFiles }}" ]]
            then php bin/phpcbf --standard=phpcs.xml ${{ steps.changes.outputs.changedFiles }}
          fi
        working-directory: "backend"
      - name: PHP Code Sniffer
        run: |
          if [[ ! -z "${{ steps.changes.outputs.changedFiles }}" ]]
            then php bin/phpcs --standard=phpcs.xml ${{ steps.changes.outputs.changedFiles }}
          fi
        working-directory: "backend"
      - name: PHPStan Static Analysis
        run: |
          if [[ ! -z "${{ steps.changes.outputs.changedFiles }}" ]]
            then php bin/phpstan analyse ${{ steps.changes.outputs.changedFiles }}
          fi
        working-directory: "backend"
  build-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: node:latest
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          coverage: xdebug
          ini-values: memory_limit=-1
          extensions: imagick, bcmath, mysqli, intl, pdo_mysql, pdo_pgsql, pgsql, opcache, gd, xsl, zip, soap, pcntl, sockets, gettext, xdebug
        env:
          APP_ENV: test
      - name: Composer install
        uses: ramsey/composer-install@v3
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader"
          working-directory: "backend"
      - name: Setup MySQL
        run: |
          sudo apt-get update
          sudo apt-get install --yes default-mysql-client
      - name: PHP Code Sniffer
        run: php bin/phpcs --standard=phpcs.xml src/
        working-directory: "backend"
      - name: Create Database
        run: |
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:schema:update --env=test --force --complete || echo "No migrations found or schema update failed"
        working-directory: "backend"
      - name: Install Assets
        run: |
          yarn install --force
          yarn encore dev
        working-directory: "backend"
      - name: PHPUnit Tests
        run: php bin/phpunit tests/ --configuration phpunit.xml --coverage-cobertura ./coverage.xml
        env:
          XDEBUG_MODE: coverage
        working-directory: "backend"
      - name: Code Coverage Analysis
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
          working-directory: "backend"
      - name: Add Coverage Summary
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
          working-directory: "backend"